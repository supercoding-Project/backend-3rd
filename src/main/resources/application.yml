server:
    address: 0.0.0.0
    port: 8080

socket:
    server:
        port: 9092
    alarm:
        port: 9093

spring:
    profiles:
        active: ${SPRING_PROFILES_ACTIVE:local} # 기본값은 local

    jwt:
        secret: ${SECRET_KEY}
        token:
            access-expiration-time: 43200000
            refresh-expiration-time: 604800000

    mail:
        host: smtp.gmail.com
        port: 587
        username: ${GMAIL_USERNAME}
        password: ${GMAIL_PASSWORD}
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true

    datasource:
        url: jdbc:mysql://${DB_HOST:backend-3rd}:3306/super_scheduler?serverTimezone=Asia/Seoul
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD}
        driver-class-name: com.mysql.cj.jdbc.Driver

    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL8Dialect
                show_sql: true
                format_sql: true

    data:
        redis:
            host: ${REDIS_HOST:redis-container}  # Redis 컨테이너의 이름이나 IP
            port: ${REDIS_PORT:6379}
            timeout: 60000

    security:
        oauth2:
            client:
                registration:
                    google:
                        client-id: ${GOOGLE_CLIENT_ID}
                        client-secret: ${GOOGLE_CLIENT_SECRET}
                        redirect-uri: ${OAUTH_GOOGLE_REDIRECT_URI}
                        scope:
                            - email
                            - profile

                    kakao:
                        client-id: ${KAKAO_CLIENT_ID}
                        client-secret: ${KAKAO_CLIENT_SECRET}
                        redirect-uri: ${OAUTH_KAKAO_REDIRECT_URI}
                        authorization-grant-type: authorization_code
                        client-authentication-method: client_secret_post
                        client-name: Kakao
                        scope:
                            - profile_nickname
                            - profile_image
                            - account_email

                    naver:
                        client-id: ${NAVER_CLIENT_ID}
                        client-secret: ${NAVER_CLIENT_SECRET}
                        redirect-uri: ${OAUTH_NAVER_REDIRECT_URI}
                        authorization-grant-type: authorization_code
                        client-name: Naver
                        scope:
                            - name
                            - email
                            - profile_image

                provider:
                    kakao:
                        authorization-uri: https://kauth.kakao.com/oauth/authorize
                        token-uri: https://kauth.kakao.com/oauth/token
                        user-info-uri: https://kapi.kakao.com/v2/user/me
                        user-name-attribute: id

                    naver:
                        authorization-uri: https://nid.naver.com/oauth2.0/authorize
                        token-uri: https://nid.naver.com/oauth2.0/token
                        user-info-uri: https://openapi.naver.com/v1/nid/me
                        user-name-attribute: response

cloud:
    aws:
        s3:
            bucket: ${BUCKET_NAME}
        stack.auto: false
        region.static: ap-northeast-2
        credentials:
            accessKey: ${ACCESS_KEY}
            secretKey: ${S3_SECRET_KEY}

logging:
    level:
        root=OFF:
