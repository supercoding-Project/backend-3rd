plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.10-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.github'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	//web
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// jdbc
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	//dev tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//junit test
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


	// Websoket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

tasks.named('test') {
	useJUnitPlatform()
}
bootJar{
	mainClass = 'com.github.scheduler.SchedulerApplication'
}
